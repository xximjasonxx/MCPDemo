// <auto-generated />
using System;
using MCPDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MCPDemo.Data.Migrations
{
    [DbContext(typeof(CovidDataDbContext))]
    [Migration("20250528175310_LocationsTable_UseFixedLengthForCountryCode")]
    partial class LocationsTable_UseFixedLengthForCountryCode
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MCPDemo.Data.Entities.DateLocationCaseInfo", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocationKey")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("CumulativeConfirmedCases")
                        .HasColumnType("bigint");

                    b.Property<long?>("CumulativeDeceasedCases")
                        .HasColumnType("bigint");

                    b.Property<long?>("CumulativeRecoveredCases")
                        .HasColumnType("bigint");

                    b.Property<long?>("CumulativeTestsConducted")
                        .HasColumnType("bigint");

                    b.Property<int?>("NewConfirmedCases")
                        .HasColumnType("int");

                    b.Property<int?>("NewDeceasedCases")
                        .HasColumnType("int");

                    b.Property<int?>("NewRecoveredCases")
                        .HasColumnType("int");

                    b.Property<int?>("NewTestsConducted")
                        .HasColumnType("int");

                    b.HasKey("Date", "LocationKey");

                    b.ToTable("DateLocationCaseInfo");
                });

            modelBuilder.Entity("MCPDemo.Data.Entities.Demographic", b =>
                {
                    b.Property<string>("LocationKey")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ClusteredPopulation")
                        .HasColumnType("int");

                    b.Property<int?>("FemalePopulation")
                        .HasColumnType("int");

                    b.Property<decimal?>("HumanDevelopmentIndex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("LargestCityPopulation")
                        .HasColumnType("int");

                    b.Property<int?>("MalePopulation")
                        .HasColumnType("int");

                    b.Property<int?>("Population0To09")
                        .HasColumnType("int");

                    b.Property<int?>("Population10To19")
                        .HasColumnType("int");

                    b.Property<int?>("Population20To29")
                        .HasColumnType("int");

                    b.Property<int?>("Population30To39")
                        .HasColumnType("int");

                    b.Property<int?>("Population40To49")
                        .HasColumnType("int");

                    b.Property<int?>("Population50To59")
                        .HasColumnType("int");

                    b.Property<int?>("Population60To69")
                        .HasColumnType("int");

                    b.Property<int?>("Population70To79")
                        .HasColumnType("int");

                    b.Property<int?>("Population80Plus")
                        .HasColumnType("int");

                    b.Property<decimal?>("PopulationPerSquareKilometer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RuralPopulation")
                        .HasColumnType("int");

                    b.Property<int?>("TotalPopulation")
                        .HasColumnType("int");

                    b.Property<int?>("UrbanPopulation")
                        .HasColumnType("int");

                    b.HasKey("LocationKey");

                    b.ToTable("Demographics");
                });

            modelBuilder.Entity("MCPDemo.Data.Entities.Location", b =>
                {
                    b.Property<string>("LocationKey")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubRegion1Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubRegion1Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubRegion2Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubRegion2Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationKey");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("MCPDemo.Data.Entities.MonthYearAggregatedCaseInfo", b =>
                {
                    b.Property<string>("LocationKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewConfirmedCases")
                        .HasColumnType("int");

                    b.Property<int>("NewDeceasedCases")
                        .HasColumnType("int");

                    b.Property<int>("NewRecoveredCases")
                        .HasColumnType("int");

                    b.Property<string>("TimePeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("MonthYearAggregatedCaseInfo", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
